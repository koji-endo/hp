#!/usr/bin/env python
# -*- coding: utf-8 -*-
import math
import sys
class srt_compile:
    filear=[]
    inputfileName=''
    outputFileName=''
    def __init__(self):
        if len(sys.argv)!=2:
            print("this function requires exactly 1 argument.")
            self.inputfileName=input("please enter file name: ")
        else:
            self.inputfileName=sys.argv[1]
        self.outputFileName=self.inputfileName.replace('csv','ass')
        with open(self.inputfileName,'r') as inp:
            for line in inp:
                line=line.replace(', ',',')
                line=line.replace('\t',',')
                line=line[:-1]
                if(line!=""):
                    self.filear.append(line.split(','))
    def compile(self):
        print(self.filear)
        with open(self.outputFileName,'w') as out:
            out.write(self.header)
            for ind,line in enumerate(self.filear):
                if(line[1]==""):
                    line[1]=self.filear[ind+1][0]
                out.write("Dialogue: 0,{},{},Default,,0,0,0,,{}\n".format(self.secFormat(int(line[0])),self.secFormat(int(line[1])),line[2]))
    def secFormat(self,second):
        hour=math.floor(second)//3600
        minute=math.floor(second)//60
        sec=math.floor(second)%60
        milisec=math.floor((second*100)%100)
        return ("{:0>1}:{:0>2}:{:0>2}.{:0>2}".format(hour,minute,sec,milisec))


    header="""[Script Info]
; Script generated by ass python compiler (TMS) 
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,50,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
"""

def main():
    sr=srt_compile()
    sr.compile()
    sr.secFormat(1.5)
if __name__=='__main__':
    main()
